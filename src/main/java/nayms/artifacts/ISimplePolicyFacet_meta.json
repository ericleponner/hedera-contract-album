{"compiler":{"version":"0.8.17+commit.8df45f5f"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes32","name":"_policyId","type":"bytes32"}],"name":"cancelSimplePolicy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"checkAndUpdateSimplePolicyState","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getPremiumCommissionBasisPoints","outputs":[{"components":[{"internalType":"uint16","name":"premiumCommissionNaymsLtdBP","type":"uint16"},{"internalType":"uint16","name":"premiumCommissionNDFBP","type":"uint16"},{"internalType":"uint16","name":"premiumCommissionSTMBP","type":"uint16"}],"internalType":"struct PolicyCommissionsBasisPoints","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_startDate","type":"uint256"},{"internalType":"uint256","name":"_maturationDate","type":"uint256"},{"internalType":"bytes32","name":"_asset","type":"bytes32"},{"internalType":"uint256","name":"_limit","type":"uint256"},{"internalType":"bytes32","name":"_offchainDataHash","type":"bytes32"}],"name":"getSigningHash","outputs":[{"internalType":"bytes32","name":"signingHash_","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"getSimplePolicyInfo","outputs":[{"components":[{"internalType":"uint256","name":"startDate","type":"uint256"},{"internalType":"uint256","name":"maturationDate","type":"uint256"},{"internalType":"bytes32","name":"asset","type":"bytes32"},{"internalType":"uint256","name":"limit","type":"uint256"},{"internalType":"bool","name":"fundsLocked","type":"bool"},{"internalType":"bool","name":"cancelled","type":"bool"},{"internalType":"uint256","name":"claimsPaid","type":"uint256"},{"internalType":"uint256","name":"premiumsPaid","type":"uint256"}],"internalType":"struct SimplePolicyInfo","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_claimId","type":"bytes32"},{"internalType":"bytes32","name":"_policyId","type":"bytes32"},{"internalType":"bytes32","name":"_insuredId","type":"bytes32"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"paySimpleClaim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_policyId","type":"bytes32"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"paySimplePremium","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Simple Policy facet","kind":"dev","methods":{"cancelSimplePolicy(bytes32)":{"details":"Cancel a simple policy","params":{"_policyId":"Id of the simple policy"}},"checkAndUpdateSimplePolicyState(bytes32)":{"details":"Check and update simple policy state","params":{"_id":"Id of the simple policy"}},"getPremiumCommissionBasisPoints()":{"returns":{"_0":"PolicyCommissionsBasisPoints struct containing the individual basis points set for each policy commission receiver."}},"getSigningHash(uint256,uint256,bytes32,uint256,bytes32)":{"details":"Generate a simple policy hash for singing by the stakeholders","params":{"_asset":"ID of the underlying asset, used as collateral and to pay out claims","_limit":"Policy coverage limit","_maturationDate":"Date after which policy becomes matured","_offchainDataHash":"Hash of all the important policy data stored offchain","_startDate":"Date when policy becomes active"},"returns":{"signingHash_":"hash for signing"}},"getSimplePolicyInfo(bytes32)":{"details":"Get simple policy info","params":{"_id":"Id of the simple policy"},"returns":{"_0":"Simple policy metadata"}},"paySimpleClaim(bytes32,bytes32,bytes32,uint256)":{"details":"Pay a claim of `_amount` for simple policy","params":{"_amount":"Amount of the claim","_claimId":"Id of the simple policy claim","_insuredId":"Id of the insured party","_policyId":"Id of the simple policy"}},"paySimplePremium(bytes32,uint256)":{"details":"Pay a premium of `_amount` on simple policy","params":{"_amount":"Amount of the premium","_policyId":"Id of the simple policy"}}},"title":"Simple Policies","version":1},"userdoc":{"kind":"user","methods":{"getPremiumCommissionBasisPoints()":{"notice":"Get the policy premium commissions basis points."}},"notice":"Facet for working with Simple Policies","version":1}},"settings":{"compilationTarget":{"src/diamonds/nayms/interfaces/ISimplePolicyFacet.sol":"ISimplePolicyFacet"},"evmVersion":"london","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"src/diamonds/nayms/interfaces/FreeStructs.sol":{"keccak256":"0xa581c3557a40441e49ee21a9cec83622785e9ae70457e3e946660b96884a2260","license":"MIT","urls":["bzz-raw://27c0f2ac1f2a37e653caf1a78d7e15ecb0aa9be191ab8b5544f9f321fdf76973","dweb:/ipfs/QmYCw4JjEhjbFaJ5mCYMntM7B1G7crDxbwaewfhbuGu8Ei"]},"src/diamonds/nayms/interfaces/ISimplePolicyFacet.sol":{"keccak256":"0xa19aacc7591f778a17b6238212567584d4f261dd035ea1a5430cc4acde135b9c","license":"MIT","urls":["bzz-raw://796c08003a00a8fac916d3dd60f753b7eac13f0bcf063af738045008684d9369","dweb:/ipfs/QmVntDBDnY7xXKVDh1hniz84v8XHcrXf8tm4pgANAnH7Ts"]}},"version":1}