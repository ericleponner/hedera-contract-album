{"compiler":{"version":"0.8.17+commit.8df45f5f"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes32","name":"_objectId","type":"bytes32"},{"internalType":"bytes32","name":"_contextId","type":"bytes32"},{"internalType":"string","name":"_role","type":"string"}],"name":"assignRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_assignerId","type":"bytes32"},{"internalType":"bytes32","name":"_objectId","type":"bytes32"},{"internalType":"bytes32","name":"_contextId","type":"bytes32"},{"internalType":"string","name":"_role","type":"string"}],"name":"canAssign","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"role","type":"string"},{"internalType":"string","name":"group","type":"string"}],"name":"canGroupAssignRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"objectId","type":"bytes32"},{"internalType":"bytes32","name":"contextId","type":"bytes32"}],"name":"getRoleInContext","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_objectId","type":"bytes32"},{"internalType":"bytes32","name":"_contextId","type":"bytes32"},{"internalType":"string","name":"_group","type":"string"}],"name":"isInGroup","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_objectId","type":"bytes32"},{"internalType":"bytes32","name":"_contextId","type":"bytes32"},{"internalType":"string","name":"_group","type":"string"}],"name":"isParentInGroup","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"role","type":"string"},{"internalType":"string","name":"group","type":"string"}],"name":"isRoleInGroup","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_objectId","type":"bytes32"},{"internalType":"bytes32","name":"_contextId","type":"bytes32"}],"name":"unassignRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_role","type":"string"},{"internalType":"string","name":"_assignerGroup","type":"string"}],"name":"updateRoleAssigner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_role","type":"string"},{"internalType":"string","name":"_group","type":"string"},{"internalType":"bool","name":"_roleInGroup","type":"bool"}],"name":"updateRoleGroup","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Use it to (un)assign or check role membership","kind":"dev","methods":{"assignRole(bytes32,bytes32,string)":{"details":"Any object ID can be a context, system is a special context with highest priority","params":{"_contextId":"ID of the context in which a role is being assigned","_objectId":"ID of an object that is being assigned a role","_role":"Name of the role being assigned"}},"canAssign(bytes32,bytes32,bytes32,string)":{"details":"Check permission to assign to a role","params":{"_assignerId":"The object ID of the user who is assigning a role to  another object.","_contextId":"ID of the context in which permission is checked","_objectId":"ID of an object that is being checked for assigning rights","_role":"name of the role to check"},"returns":{"_0":"true if user the right to assign, false otherwise"}},"canGroupAssignRole(string,string)":{"details":"Get whether given group can assign given role.","params":{"group":"the group.","role":"the role."},"returns":{"_0":"true if role can be assigned by group, false otherwise."}},"getRoleInContext(bytes32,bytes32)":{"params":{"contextId":"ID of the context in which the objectId's role is being checked","objectId":"ID of an object that is being checked for its assigned role in a specific context"},"returns":{"_0":"roleId objectId's role in the contextId"}},"isInGroup(bytes32,bytes32,string)":{"details":"Assigning a role to the object makes it a member of a corresponding role group","params":{"_contextId":"Context in which membership should be checked","_group":"name of the role group","_objectId":"ID of an object that is being checked for role group membership"},"returns":{"_0":"true if object with given ID is a member, false otherwise"}},"isParentInGroup(bytes32,bytes32,string)":{"details":"Objects can have a parent object, i.e. entity is a parent of a user","params":{"_contextId":"Context in which the role group membership is being checked","_group":"name of the role group","_objectId":"ID of an object whose parent is being checked for role group membership"},"returns":{"_0":"true if object's parent is a member of this role group, false otherwise"}},"isRoleInGroup(string,string)":{"details":"Get whether role is in group.","params":{"group":"the group.","role":"the role."},"returns":{"_0":"true if role is in group, false otherwise."}},"unassignRole(bytes32,bytes32)":{"details":"Any object ID can be a context, system is a special context with highest priority","params":{"_contextId":"ID of the context in which a role membership is being revoked","_objectId":"ID of an object that is being unassigned from a role"}},"updateRoleAssigner(string,string)":{"details":"Update who has permission to assign this role","params":{"_assignerGroup":"Group who can assign members to this role","_role":"name of the role"}},"updateRoleGroup(string,string,bool)":{"details":"Update role group memebership","params":{"_group":"name of the group","_role":"name of the role","_roleInGroup":"is member of"}}},"title":"Access Control List","version":1},"userdoc":{"kind":"user","methods":{"assignRole(bytes32,bytes32,string)":{"notice":"Assign a `_roleId` to the object in given context"},"canAssign(bytes32,bytes32,bytes32,string)":{"notice":"Check whether a user can assign specific object to the `_role` role in given context"},"canGroupAssignRole(string,string)":{"notice":"Get whether given group can assign given role."},"getRoleInContext(bytes32,bytes32)":{"notice":"Get a user's (an objectId's) assigned role in a specific context"},"isInGroup(bytes32,bytes32,string)":{"notice":"Checks if an object belongs to `_group` group in given context"},"isParentInGroup(bytes32,bytes32,string)":{"notice":"Check whether a parent object belongs to the `_group` group in given context"},"isRoleInGroup(string,string)":{"notice":"Get whether role is in group."},"unassignRole(bytes32,bytes32)":{"notice":"Unassign object from a role in given context"},"updateRoleAssigner(string,string)":{"notice":"Update who can assign `_role` role"},"updateRoleGroup(string,string,bool)":{"notice":"Update role group memebership for `_role` role and `_group` group"}},"notice":"Use it to authorize various actions on the contracts","version":1}},"settings":{"compilationTarget":{"src/diamonds/nayms/interfaces/IACLFacet.sol":"IACLFacet"},"evmVersion":"london","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"src/diamonds/nayms/interfaces/IACLFacet.sol":{"keccak256":"0xd72d59aa31c0834a96493e2a896bc9ee2963f906ab5c907184aeb1e7b8263176","license":"MIT","urls":["bzz-raw://e55525f0117636d55524b0f56513c4c14e5d533994fbf303d05813ba27705931","dweb:/ipfs/QmXiUgcRkULmBTeSXDv96sb584H9eQNX3wqN88qUVUBFdh"]}},"version":1}