{"compiler":{"version":"0.8.17+commit.8df45f5f"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"cancelUpgrade","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"createUpgrade","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"getUpgrade","outputs":[{"internalType":"uint256","name":"expiry","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"duration","type":"uint256"}],"name":"updateUpgradeExpiration","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"cancelUpgrade(bytes32)":{"details":"This will set the mapping AppStorage.upgradeScheduled back to 0.","params":{"id":"This is the keccak256(abi.encode(cut)), where cut is the array of FacetCut struct, IDiamondCut.FacetCut[]."}},"createUpgrade(bytes32)":{"details":"The diamondCut() has been modified to check if the upgrade has been scheduled. This method needs to be called in order      for an upgrade to be executed.","params":{"id":"This is the keccak256(abi.encode(cut)), where cut is the array of FacetCut struct, IDiamondCut.FacetCut[]."}},"getUpgrade(bytes32)":{"details":"This will get the value from AppStorage.upgradeScheduled  mapping.","params":{"id":"This is the keccak256(abi.encode(cut)), where cut is the array of FacetCut struct, IDiamondCut.FacetCut[]."}},"updateUpgradeExpiration(uint256)":{"details":"When createUpgrade() is called, it allows a diamondCut() upgrade to be executed. This upgrade must be executed before the      upgrade expires. The upgrade expires based on when the upgrade was scheduled (when createUpgrade() was called) + AppStorage.upgradeExpiration.","params":{"duration":"The duration until the upgrade expires."}}},"version":1},"userdoc":{"kind":"user","methods":{"cancelUpgrade(bytes32)":{"notice":"Cancel the following upgrade hash: `id`"},"createUpgrade(bytes32)":{"notice":"Approve the following upgrade hash: `id`"},"getUpgrade(bytes32)":{"notice":"Get the expiry date for provided upgrade hash."},"updateUpgradeExpiration(uint256)":{"notice":"Update the diamond cut upgrade expiration period."}},"version":1}},"settings":{"compilationTarget":{"src/diamonds/nayms/interfaces/IGovernanceFacet.sol":"IGovernanceFacet"},"evmVersion":"london","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"src/diamonds/nayms/interfaces/IGovernanceFacet.sol":{"keccak256":"0x448775d86984f2f7d3f0a5e5515daf1166e654a6c352deb6ad0393b1f728847e","license":"MIT","urls":["bzz-raw://ee4be353b587e50bd1d5eb022f4ed8407296df820ffc5895cd89af8e489df93b","dweb:/ipfs/QmSYbCAWtMMUYDySRhTWxixJNUjCQDzZqYDHtpmtBpoT1E"]}},"version":1}