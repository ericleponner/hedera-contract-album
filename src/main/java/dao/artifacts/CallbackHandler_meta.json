{"compiler":{"version":"0.8.17+commit.8df45f5f"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes4","name":"callbackSelector","type":"bytes4"},{"internalType":"bytes4","name":"magicNumber","type":"bytes4"}],"name":"UnkownCallback","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"bytes4","name":"sig","type":"bytes4"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"CallbackReceived","type":"event"}],"devdoc":{"author":"Aragon Association - 2022-2023","details":"This callback handling functionality is intented to be used by executor contracts (i.e., `DAO.sol`).","errors":{"UnkownCallback(bytes4,bytes4)":[{"params":{"callbackSelector":"The selector of the callback function.","magicNumber":"The magic number to be registered for the callback function selector."}}]},"events":{"CallbackReceived(address,bytes4,bytes)":{"params":{"data":"The calldata for the function signature.","sender":"Who called the callback.","sig":"The function signature."}}},"kind":"dev","methods":{},"title":"CallbackHandler","version":1},"userdoc":{"errors":{"UnkownCallback(bytes4,bytes4)":[{"notice":"Thrown if the callback function is not registered."}]},"events":{"CallbackReceived(address,bytes4,bytes)":{"notice":"Emitted when `_handleCallback` is called."}},"kind":"user","methods":{},"notice":"This contract handles callbacks by registering a magic number together with the callback function's selector. It provides the `_handleCallback` function that inherting have to call inside their `fallback()` function  (`_handleCallback(msg.callbackSelector, msg.data)`).  This allows to adaptively register ERC standards (e.g., [ERC-721](https://eips.ethereum.org/EIPS/eip-721), [ERC-1115](https://eips.ethereum.org/EIPS/eip-1155), or future versions of [ERC-165](https://eips.ethereum.org/EIPS/eip-165)) and returning the required magic numbers for the associated callback functions for the inheriting contract so that it doesn't need to be upgraded.","version":1}},"settings":{"compilationTarget":{"src/core/utils/CallbackHandler.sol":"CallbackHandler"},"evmVersion":"london","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"src/core/utils/CallbackHandler.sol":{"keccak256":"0x1322af2c404353ca0e02384a3e28d272013da4e57d3ff34ce510d47207a33ab8","license":"AGPL-3.0-or-later","urls":["bzz-raw://d4c2e966f8ad50f11bb045df443ba8eff46076d9c79b37c1490c4849da5a0c85","dweb:/ipfs/QmVU1VMXBTNVz99nmAL11A5i9DEKcVcMrHGVw5BeZkSeTG"]}},"version":1}