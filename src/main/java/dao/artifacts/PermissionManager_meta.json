{"compiler":{"version":"0.8.17+commit.8df45f5f"},"language":"Solidity","output":{"abi":[{"inputs":[],"name":"AnyAddressDisallowedForWhoAndWhere","type":"error"},{"inputs":[],"name":"ConditionNotPresentForAnyAddress","type":"error"},{"inputs":[{"internalType":"address","name":"where","type":"address"},{"internalType":"address","name":"who","type":"address"},{"internalType":"bytes32","name":"permissionId","type":"bytes32"},{"internalType":"address","name":"currentCondition","type":"address"},{"internalType":"address","name":"newCondition","type":"address"}],"name":"PermissionAlreadyGrantedForDifferentCondition","type":"error"},{"inputs":[],"name":"PermissionsForAnyAddressDisallowed","type":"error"},{"inputs":[{"internalType":"address","name":"where","type":"address"},{"internalType":"address","name":"who","type":"address"},{"internalType":"bytes32","name":"permissionId","type":"bytes32"}],"name":"Unauthorized","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"permissionId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"here","type":"address"},{"indexed":false,"internalType":"address","name":"where","type":"address"},{"indexed":true,"internalType":"address","name":"who","type":"address"},{"indexed":false,"internalType":"contract IPermissionCondition","name":"condition","type":"address"}],"name":"Granted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"permissionId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"here","type":"address"},{"indexed":false,"internalType":"address","name":"where","type":"address"},{"indexed":true,"internalType":"address","name":"who","type":"address"}],"name":"Revoked","type":"event"},{"inputs":[],"name":"ROOT_PERMISSION_ID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"enum PermissionLib.Operation","name":"operation","type":"uint8"},{"internalType":"address","name":"where","type":"address"},{"internalType":"address","name":"who","type":"address"},{"internalType":"address","name":"condition","type":"address"},{"internalType":"bytes32","name":"permissionId","type":"bytes32"}],"internalType":"struct PermissionLib.MultiTargetPermission[]","name":"_items","type":"tuple[]"}],"name":"applyMultiTargetPermissions","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_where","type":"address"},{"components":[{"internalType":"enum PermissionLib.Operation","name":"operation","type":"uint8"},{"internalType":"address","name":"who","type":"address"},{"internalType":"bytes32","name":"permissionId","type":"bytes32"}],"internalType":"struct PermissionLib.SingleTargetPermission[]","name":"items","type":"tuple[]"}],"name":"applySingleTargetPermissions","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_where","type":"address"},{"internalType":"address","name":"_who","type":"address"},{"internalType":"bytes32","name":"_permissionId","type":"bytes32"}],"name":"grant","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_where","type":"address"},{"internalType":"address","name":"_who","type":"address"},{"internalType":"bytes32","name":"_permissionId","type":"bytes32"},{"internalType":"contract IPermissionCondition","name":"_condition","type":"address"}],"name":"grantWithCondition","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_where","type":"address"},{"internalType":"address","name":"_who","type":"address"},{"internalType":"bytes32","name":"_permissionId","type":"bytes32"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"isGranted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_where","type":"address"},{"internalType":"address","name":"_who","type":"address"},{"internalType":"bytes32","name":"_permissionId","type":"bytes32"}],"name":"revoke","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Aragon Association - 2021-2023","errors":{"PermissionAlreadyGrantedForDifferentCondition(address,address,bytes32,address,address)":[{"details":"This makes sure that condition on the same permission can not be overwriten by a different condition.","params":{"currentCondition":"The current condition set for permissionId.","newCondition":"The new condition it tries to set for permissionId.","permissionId":"The permission identifier.","where":"The address of the target contract to grant `_who` permission to.","who":"The address (EOA or contract) to which the permission has already been granted."}}],"Unauthorized(address,address,bytes32)":[{"params":{"permissionId":"The permission identifier.","where":"The context in which the authorization reverted.","who":"The address (EOA or contract) missing the permission."}}]},"events":{"Granted(bytes32,address,address,address,address)":{"params":{"condition":"The address `ALLOW_FLAG` for regular permissions or, alternatively, the `PermissionCondition` to be used.","here":"The address of the context in which the permission is granted.","permissionId":"The permission identifier.","where":"The address of the target contract for which `_who` receives permission.","who":"The address (EOA or contract) receiving the permission."}},"Revoked(bytes32,address,address,address)":{"params":{"here":"The address of the context in which the permission is revoked.","permissionId":"The permission identifier.","where":"The address of the target contract for which `_who` loses permission.","who":"The address (EOA or contract) losing the permission."}}},"kind":"dev","methods":{"applyMultiTargetPermissions((uint8,address,address,address,bytes32)[])":{"params":{"_items":"The array of multi-targeted permission operations to apply."}},"applySingleTargetPermissions(address,(uint8,address,bytes32)[])":{"params":{"_where":"The address of the single target contract.","items":"The array of single-targeted permission operations to apply."}},"grant(address,address,bytes32)":{"details":"Requires the `ROOT_PERMISSION_ID` permission.Note, that granting permissions with `_who` or `_where` equal to `ANY_ADDR` does not replace other permissions with specific `_who` and `_where` addresses that exist in parallel.","params":{"_permissionId":"The permission identifier.","_where":"The address of the target contract for which `_who` recieves permission.","_who":"The address (EOA or contract) receiving the permission."}},"grantWithCondition(address,address,bytes32,address)":{"details":"Requires the `ROOT_PERMISSION_ID` permissionNote, that granting permissions with `_who` or `_where` equal to `ANY_ADDR` does not replace other permissions with specific `_who` and `_where` addresses that exist in parallel.","params":{"_condition":"The `PermissionCondition` that will be asked for authorization on calls connected to the specified permission identifier.","_permissionId":"The permission identifier.","_where":"The address of the target contract for which `_who` recieves permission.","_who":"The address (EOA or contract) receiving the permission."}},"isGranted(address,address,bytes32,bytes)":{"params":{"_data":"The optional data passed to the `PermissionCondition` registered.","_permissionId":"The permission identifier.","_where":"The address of the target contract for which `_who` recieves permission.","_who":"The address (EOA or contract) for which the permission is checked."},"returns":{"_0":"Returns true if `_who` has the permissions on the target contract via the specified permission identifier."}},"revoke(address,address,bytes32)":{"details":"Requires the `ROOT_PERMISSION_ID` permission.Note, that revoking permissions with `_who` or `_where` equal to `ANY_ADDR` does not revoke other permissions with specific `_who` and `_where` addresses that exist in parallel.","params":{"_permissionId":"The permission identifier.","_where":"The address of the target contract for which `_who` loses permission.","_who":"The address (EOA or contract) losing the permission."}}},"title":"PermissionManager","version":1},"userdoc":{"errors":{"AnyAddressDisallowedForWhoAndWhere()":[{"notice":"Thrown for permission grants where `who` and `where` are both `ANY_ADDR`."}],"ConditionNotPresentForAnyAddress()":[{"notice":"Thrown for permission grants where `who` or `where` is `ANY_ADDR`, but no condition is present."}],"PermissionAlreadyGrantedForDifferentCondition(address,address,bytes32,address,address)":[{"notice":"Thrown if a permission has been already granted with a different condition."}],"PermissionsForAnyAddressDisallowed()":[{"notice":"Thrown for `ROOT_PERMISSION_ID` or `EXECUTE_PERMISSION_ID` permission grants where `who` or `where` is `ANY_ADDR`."}],"Unauthorized(address,address,bytes32)":[{"notice":"Thrown if a call is unauthorized."}]},"events":{"Granted(bytes32,address,address,address,address)":{"notice":"Emitted when a permission `permission` is granted in the context `here` to the address `_who` for the contract `_where`."},"Revoked(bytes32,address,address,address)":{"notice":"Emitted when a permission `permission` is revoked in the context `here` from the address `_who` for the contract `_where`."}},"kind":"user","methods":{"ROOT_PERMISSION_ID()":{"notice":"The ID of the permission required to call the `grant`, `grantWithCondition`, `revoke`, and `bulk` function."},"applyMultiTargetPermissions((uint8,address,address,address,bytes32)[])":{"notice":"Applies an array of permission operations on multiple target contracts `items[i].where`."},"applySingleTargetPermissions(address,(uint8,address,bytes32)[])":{"notice":"Applies an array of permission operations on a single target contracts `_where`."},"grant(address,address,bytes32)":{"notice":"Grants permission to an address to call methods in a contract guarded by an auth modifier with the specified permission identifier."},"grantWithCondition(address,address,bytes32,address)":{"notice":"Grants permission to an address to call methods in a target contract guarded by an auth modifier with the specified permission identifier if the referenced condition permits it."},"isGranted(address,address,bytes32,bytes)":{"notice":"Checks if an address has permission on a contract via a permission identifier and considers if `ANY_ADDRESS` was used in the granting process."},"revoke(address,address,bytes32)":{"notice":"Revokes permission from an address to call methods in a target contract guarded by an auth modifier with the specified permission identifier."}},"notice":"The abstract permission manager used in a DAO, its associated plugins, and other framework-related components.","version":1}},"settings":{"compilationTarget":{"src/core/permission/PermissionManager.sol":"PermissionManager"},"evmVersion":"london","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"keccak256":"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271","license":"MIT","urls":["bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618","dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ"]},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"keccak256":"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183","license":"MIT","urls":["bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06","dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879"]},"src/core/permission/IPermissionCondition.sol":{"keccak256":"0x38e4f91e06bb2255dae9c2305c05e511fddf773cf231be42aedee5e883255bb9","license":"AGPL-3.0-or-later","urls":["bzz-raw://efa89b045dc87ff9c14ccf32de35a9d64d97cf3fb05c997ca31d672f56e74354","dweb:/ipfs/QmRpD4XneUUfZzRPW6sgT66614cCV9rLU5aDa3AiDiyEnd"]},"src/core/permission/PermissionLib.sol":{"keccak256":"0xd1a00691deee7a95f44a7ea8bda5494a71ae2662d056315dbe260aadc4025cb6","license":"AGPL-3.0-or-later","urls":["bzz-raw://fcb8b541e35540383fb0362aedc7ebe7297d64133f3b72a15100464ad29b8f41","dweb:/ipfs/QmT4gj4Hf1apwCpfaHCxByRnNMYhc6gsGqNaETEHyAXfer"]},"src/core/permission/PermissionManager.sol":{"keccak256":"0xc695525c206e8b54d0314a1a707f94655d4684ba0f0f4ae04ffdb9a9f641f643","license":"AGPL-3.0-or-later","urls":["bzz-raw://5117959bd4c832fcd2f6b7d3697a2802f2dce3caef2250fe7433d270f99f2c2d","dweb:/ipfs/QmZsNkBSsGBY1Xrpck13QpLZ7JVYaa8Q6rSXnt1PPE11gL"]}},"version":1}